apiVersion: v1
kind: Secret
metadata:
  name: spring-boot-application-yaml
type: Opaque
stringData:
  application.yaml: |
    spring:
      kafka:
        properties:
          bootstrap.servers: kafka.confluent.svc.cluster.local:9071
          sasl.mechanism: PLAIN
          sasl.jaas.config: "org.apache.kafka.common.security.plain.PlainLoginModule required username='kafka_client' password='kafka_client-secret';"
          security.protocol: SASL_SSL
          ssl.truststore.location: "/mnt/sslcerts/truststore.jks"
          ssl.truststore.password: "mystorepassword"
      cloud:
        stream:
          function:
            definition: produceData;consumeData
          bindings:
            # kafka producer
            produceData-out-0:
              binder: kafka
              destination: quotes
              producer:
                partition-count: 4
                useNativeEncoding: true
            # kafka consumer
            consumeData-in-0:
              binder: kafka
              destination: quotes
              group: boot-app-consumer
          kafka:
            binder:
              consumer-properties:
                key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
                value.deserializer: org.apache.kafka.common.serialization.StringDeserializer
              producer-properties:
                key.serializer: org.apache.kafka.common.serialization.StringSerializer
                value.serializer: org.apache.kafka.common.serialization.StringSerializer
